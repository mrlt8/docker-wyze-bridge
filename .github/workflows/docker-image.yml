name: Docker

on:
  schedule:
    - cron: "31 22 * * 0"
  push:
    branches: [main, dev]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/arm64,linux/arm

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository_owner }}/wyze-bridge
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=semver,pattern={{ version }}
            type=edge,branch=main,enable=${{ github.event_name == 'push' }}
            type=ref,event=branch,enable=${{ contains(github.ref,'dev') }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata for hwaccel builds
        id: hwmeta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository_owner }}/wyze-bridge
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule,suffix=-hw
            type=semver,pattern={{ version }},suffix=-hw
            type=edge,branch=main,enable=${{ github.event_name == 'push' }},suffix=-hw
            type=ref,event=branch,enable=${{ contains(github.ref,'dev') }},suffix=-hw

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push a multi-arch Docker image
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./app/
          push: ${{ github.event_name != 'pull_request' }}
          file: ./app/multi-arch.Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          # build-args: SDK_KEY=${{secrets.SDK_KEY}}
          labels: |
            ${{ steps.meta.outputs.labels }}
            io.hass.name=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.title'] }}
            io.hass.description=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }}
            io.hass.version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            io.hass.type=addon
            io.hass.arch=amd64,armhf,aarch64
          tags: ${{ steps.meta.outputs.tags }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push an amd64 Docker image with hwaccel enabled
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./app/
          push: ${{ github.event_name != 'pull_request' }}
          file: ./app/Dockerfile.hwaccel
          platforms: linux/amd64
          # build-args: SDK_KEY=${{secrets.SDK_KEY}}
          labels: |
            ${{ steps.meta.outputs.labels }}
            io.hass.name=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.title'] }}
            io.hass.description=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }}
            io.hass.version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            io.hass.type=addon
            io.hass.arch=amd64
          tags: ${{ steps.hwmeta.outputs.tags }}

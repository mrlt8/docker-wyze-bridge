name: Docker

on:
  schedule:
    - cron: '31 22 * * 0'
  push:
    branches: [main, dev]
    # Publish semver tags as releases.
    tags: ['v*.*.*']
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  checkout:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update Release Version
        id: version_bump
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG_NAME=${GITHUB_REF##*/v}
          if [[ $TAG_NAME =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.*)?$ ]]; then
            sed -i "s/^VERSION=.*/VERSION=${TAG_NAME}/" ./app/.env
            jq --arg VERSION "${TAG_NAME}" '.version = $VERSION' ./app/config.json > updated.json
            mv updated.json ./app/config.json
            echo "tag=${TAG_NAME}" >> $GITHUB_OUTPUT
          fi

    outputs:
      version: ${{ steps.version_bump.outputs.tag }}

  login:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

  multiarch:
    needs: [checkout, login]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository_owner }}/wyze-bridge
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=semver,pattern={{ version }}
            type=edge,branch=main,enable=${{ github.event_name == 'push' }}
            type=ref,event=branch,enable=${{ contains(github.ref,'dev') }}

      - name: Build and push a multi-arch Docker image
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./app/
          push: ${{ github.event_name != 'pull_request' }}
          file: ./app/Dockerfile.multiarch
          platforms: linux/amd64,linux/arm64,linux/arm
          build-args: BUILD=${{ steps.meta.outputs.VERSION }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            io.hass.name=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.title'] }}
            io.hass.description=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }}
            io.hass.version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            io.hass.type=addon
            io.hass.arch=amd64,armhf,aarch64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  hwaccel:
    needs: [checkout, login]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Extract Docker metadata for hwaccel builds
        id: hwmeta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository_owner }}/wyze-bridge
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=auto
            suffix=-hw,onlatest=true
          tags: |
            type=schedule,suffix=-hw
            type=semver,pattern={{ version }},suffix=-hw
            type=edge,branch=main,enable=${{ github.event_name == 'push' }},suffix=-hw
            type=ref,event=branch,enable=${{ contains(github.ref,'dev') }},suffix=-hw

      - name: Build and push an amd64 Docker image with hwaccel enabled
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./app/
          push: ${{ github.event_name != 'pull_request' }}
          file: ./app/Dockerfile.hwaccel
          platforms: linux/amd64
          build-args: BUILD=${{ steps.hwmeta.outputs.VERSION }}
          labels: |
            ${{ steps.hwmeta.outputs.labels }}
            io.hass.name=${{ fromJSON(steps.hwmeta.outputs.json).labels['org.opencontainers.image.title'] }}
            io.hass.description=${{ fromJSON(steps.hwmeta.outputs.json).labels['org.opencontainers.image.description'] }}
            io.hass.version=${{ fromJSON(steps.hwmeta.outputs.json).labels['org.opencontainers.image.version'] }}
            io.hass.type=addon
            io.hass.arch=amd64
          tags: ${{ steps.hwmeta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  qsv:
    needs: [checkout, login]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Extract Docker metadata for qsv builds
        id: qsvmeta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository_owner }}/wyze-bridge
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=auto
            suffix=-qsv,onlatest=true
          tags: |
            type=schedule,suffix=-qsv
            type=semver,pattern={{ version }},suffix=-qsv
            type=edge,branch=main,enable=${{ github.event_name == 'push' }},suffix=-qsv
            type=ref,event=branch,enable=${{ contains(github.ref,'dev') }},suffix=-qsv

      - name: Build and push an amd64 Docker image with QSV drivers
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./app/
          push: ${{ github.event_name != 'pull_request' }}
          file: ./app/Dockerfile.hwaccel
          build-args: |
            BUILD=${{ steps.qsvmeta.outputs.VERSION }}
            QSV=1
          labels: |
            ${{ steps.qsvmeta.outputs.labels }}
            io.hass.name=${{ fromJSON(steps.qsvmeta.outputs.json).labels['org.opencontainers.image.title'] }}
            io.hass.description=${{ fromJSON(steps.qsvmeta.outputs.json).labels['org.opencontainers.image.description'] }}
            io.hass.version=${{ fromJSON(steps.qsvmeta.outputs.json).labels['org.opencontainers.image.version'] }}
            io.hass.type=addon
            io.hass.arch=amd64
          tags: ${{ steps.qsvmeta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  commit_changes:
    # Only commit changes if all other jobs run.
    needs: [checkout, multiarch, hwaccel, qsv]
    runs-on: ubuntu-latest
    steps:
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: 'Bump Version to v${{ needs.checkout.outputs.version }}'
          file_pattern: 'app/.env app/config.json'
